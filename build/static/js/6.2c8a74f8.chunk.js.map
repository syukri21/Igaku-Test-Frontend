{"version":3,"sources":["api/api.ts","../node_modules/@material-ui/icons/LockOutlined.js","pages/login/providers/login.provider.ts","pages/login/login.provider.ts","pages/login/Login.tsx"],"names":["Api","apiUrl","token","window","localStorage","getItem","this","setItem","params","axiosRequestConfig","baseURL","headers","Authorization","axios","create","instance","getInstance","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","LoginProvider","createProvider","data","a","dispatch","getDispatch","login","fetch","method","url","result","addReducer","global","_","type","payload","loading","error","validationSchema","Yup","shape","email","required","password","min","initialValues","useLogin","useGlobal","loginState","history","useHistory","formik","useFormik","onSubmit","values","then","push","catch","setGlobalSnackbar","message","severity","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","classes","Container","component","maxWidth","className","Avatar","Typography","variant","noValidate","handleSubmit","TextField","fullWidth","id","label","name","autoComplete","autoFocus","onChange","handleChange","errors","touched","helperText","FormHelperTextProps","style","fontSize","Button","color","disabled","Box","justifyContent","to","Link","href"],"mappings":"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","file":"static/js/6.2c8a74f8.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\"\r\n\r\nclass Api {\r\n    private static instance: Api\r\n    private apiUrl: string | undefined = \"http://ec2-18-191-129-34.us-east-2.compute.amazonaws.com:3030\"\r\n    private token?: string | null\r\n\r\n    private constructor() {}\r\n\r\n    public static getInstance(): Api {\r\n        if (!Api.instance) {\r\n            Api.instance = new Api()\r\n        }\r\n\r\n        return Api.instance\r\n    }\r\n\r\n    public getToken() {\r\n        if (window) {\r\n            const token = localStorage.getItem(\"token\")\r\n            if (token) this.token = token\r\n        }\r\n\r\n        return this.token\r\n    }\r\n\r\n    public setToken(token: string) {\r\n        if (window) window.localStorage.setItem(\"token\", token)\r\n    }\r\n\r\n    public fetch(params: any) {\r\n        const axiosRequestConfig: AxiosRequestConfig = {\r\n            baseURL: this.apiUrl,\r\n        }\r\n        const token = localStorage.getItem(\"token\")\r\n        if (token) {\r\n            axiosRequestConfig.headers = { Authorization: `Bearer ${token}` }\r\n        }\r\n        return axios.create(axiosRequestConfig)(params)\r\n    }\r\n}\r\n\r\nexport default Api.getInstance()\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\n\nexports.default = _default;","import { createProvider } from \"reactn\"\r\nimport Api from \"../../../api/api\"\r\nimport { LoginState, LoginParams } from \"../@types/login.type\"\r\n\r\nconst LoginProvider = createProvider<LoginState>()\r\n\r\nLoginProvider.addReducer(\"login\", (global: any, _, type, payload) => {\r\n    switch (type) {\r\n        case \"LOADING\":\r\n            global.loading = true\r\n            break\r\n        case \"ERROR\":\r\n            global.loading = false\r\n            global.error = payload\r\n            break\r\n        case \"SUCCESS\":\r\n            global.loading = false\r\n            global.error = null\r\n            global.data = payload\r\n            break\r\n    }\r\n    return global\r\n})\r\n\r\nexport async function login(data: LoginParams) {\r\n    const dispatch = LoginProvider.getDispatch()\r\n    try {\r\n        dispatch.login(\"LOADING\")\r\n        const result = await Api.fetch({\r\n            method: \"POST\",\r\n            url: \"/auth/login\",\r\n            data,\r\n        })\r\n        dispatch.login(\"SUCCESS\", result.data)\r\n        return result.data\r\n    } catch (err) {\r\n        dispatch.login(\"ERROR\")\r\n        throw err\r\n    }\r\n}\r\n\r\nexport default LoginProvider\r\n","import LoginProvider, { login } from \"./providers/login.provider\"\r\nimport * as Yup from \"yup\"\r\nimport { useFormik } from \"formik\"\r\nimport { LoginParams, LoginResponse } from \"./@types/login.type\"\r\nimport { setGlobalSnackbar } from \"../../components/GlobalSnackbar/globalSnackbar.provider\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Api from \"../../api/api\"\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string().email().required(\"required*\"),\r\n    password: Yup.string().min(6, \"Minimal 6 character.\").required(\"required*\"),\r\n})\r\n\r\nconst initialValues: LoginParams = {\r\n    email: \"\",\r\n    password: \"\",\r\n}\r\n\r\nexport default function useLogin() {\r\n    const [loginState] = LoginProvider.useGlobal()\r\n    const history = useHistory()\r\n\r\n    function handleToken(data: LoginResponse) {\r\n        Api.setToken(data.accessToken)\r\n        setTimeout(() => {}, 1000)\r\n    }\r\n\r\n    const formik = useFormik({\r\n        validationSchema,\r\n        initialValues,\r\n        onSubmit: (values) => {\r\n            login(values)\r\n                .then((data: LoginResponse) => {\r\n                    history.push(\"/todo\")\r\n                })\r\n                .catch((error: any) => {\r\n                    setGlobalSnackbar(\"SHOW\", {\r\n                        message: \"Email or Password wrong!\",\r\n                        severity: \"error\",\r\n                    })\r\n                })\r\n        },\r\n    })\r\n\r\n    return { loginState, formik, history }\r\n}\r\n","import React from \"react\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Link from \"@material-ui/core/Link\"\r\nimport { Link as RouterLink } from \"react-router-dom\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport useLogin from \"./login.provider\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}))\r\n\r\nexport interface LoginProps {}\r\n\r\nconst Login: React.SFC<LoginProps> = () => {\r\n    const classes = useStyles()\r\n    const { loginState, formik } = useLogin()\r\n\r\n    return (\r\n        <Container component='main' maxWidth='xs'>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component='h1' variant='h5'>\r\n                    Sign in\r\n                </Typography>\r\n                <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant='outlined'\r\n                        margin='normal'\r\n                        required\r\n                        fullWidth\r\n                        id='email'\r\n                        label='Email Address'\r\n                        name='email'\r\n                        autoComplete='email'\r\n                        autoFocus\r\n                        onChange={formik.handleChange}\r\n                        error={!!formik.errors.email && formik.touched.email}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                        FormHelperTextProps={{ style: { fontSize: 10 } }}\r\n                    />\r\n                    <TextField\r\n                        variant='outlined'\r\n                        margin='normal'\r\n                        required\r\n                        fullWidth\r\n                        name='password'\r\n                        label='Password'\r\n                        type='password'\r\n                        id='password'\r\n                        autoComplete='current-password'\r\n                        onChange={formik.handleChange}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                        error={formik.touched.email && !!formik.errors.email}\r\n                        FormHelperTextProps={{ style: { fontSize: 10 } }}\r\n                    />\r\n                    <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit} disabled={loginState.loading}>\r\n                        {loginState.loading ? \"Loading...\" : \"Sign In\"}\r\n                    </Button>\r\n\r\n                    <Box component='div' display='flex' justifyContent='flex-end'>\r\n                        <RouterLink to='/register'>\r\n                            <Link href='#' variant='body2'>\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </RouterLink>\r\n                    </Box>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"],"sourceRoot":""}