{"version":3,"sources":["../node_modules/@material-ui/icons/Person.js","pages/register/providers/register.provider.ts","pages/register/register.handler.ts","pages/register/Register.tsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","RegisterProvider","createProvider","loading","error","data","a","dispatch","getDispatch","register","Api","fetch","method","url","result","addReducer","global","_","type","payload","initialValues","firstName","lastName","email","password","confirmPassword","validationSchema","Yup","shape","min","required","oneOf","useRegister","history","useHistory","useGlobal","registerState","formik","useFormik","onSubmit","values","then","push","catch","setGlobalSnackbar","message","severity","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","textName","spacer","Register","props","classes","Container","component","maxWidth","className","Avatar","Typography","variant","noValidate","autoComplete","handleSubmit","TextField","fullWidth","id","label","name","onChange","handleChange","autoFocus","FormHelperTextProps","style","fontSize","helperText","touched","errors","Button","color","disabled","Box","justifyContent","to","Link","href"],"mappings":"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","file":"static/js/7.faf27e2a.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;","import { createProvider } from \"reactn\"\r\nimport Api from \"../../../api/api\"\r\nimport { RegisterState, RegisterParam } from \"../@types/register.type\"\r\n\r\nconst RegisterProvider = createProvider<RegisterState>({\r\n    loading: false,\r\n    error: null,\r\n})\r\n\r\nRegisterProvider.addReducer(\"register\", (global: any, _, type, payload) => {\r\n    switch (type) {\r\n        case \"LOADING\":\r\n            global.loading = true\r\n            break\r\n        case \"ERROR\":\r\n            global.loading = false\r\n            global.error = payload\r\n            break\r\n        case \"SUCCESS\":\r\n            global.loading = false\r\n            global.error = null\r\n            global.data = payload\r\n            break\r\n    }\r\n    return global\r\n})\r\n\r\nexport async function register(data: RegisterParam) {\r\n    const dispatch = RegisterProvider.getDispatch()\r\n    try {\r\n        dispatch.register(\"LOADING\")\r\n        const result = await Api.fetch({\r\n            method: \"POST\",\r\n            url: \"/auth/register\",\r\n            data,\r\n        })\r\n        dispatch.register(\"SUCCESS\", result.data)\r\n        return result.data\r\n    } catch (err) {\r\n        dispatch.register(\"ERROR\")\r\n        throw err\r\n    }\r\n}\r\n\r\nexport default RegisterProvider\r\n","import { register } from \"./providers/register.provider\"\r\nimport { useFormik } from \"formik\"\r\nimport * as Yup from \"yup\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { setGlobalSnackbar } from \"../../components/GlobalSnackbar/globalSnackbar.provider\"\r\nimport RegisterProvider from \"./providers/register.provider\"\r\n\r\nconst initialValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n}\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string().min(3).required(\"required *\"),\r\n    lastName: Yup.string().min(3).required(\"required *\"),\r\n    email: Yup.string().email().required(\"required *\"),\r\n    password: Yup.string().min(6).required(\"required *\"),\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref(\"password\")], \"Passwords must match\")\r\n        .required(\"required *\"),\r\n})\r\n\r\nexport default function useRegister() {\r\n    const history = useHistory()\r\n    const [registerState] = RegisterProvider.useGlobal()\r\n\r\n    const formik = useFormik({\r\n        validationSchema,\r\n        initialValues,\r\n        onSubmit: (values) => {\r\n            register(values)\r\n                .then(() => history.push(\"/login\"))\r\n                .catch((error) => {\r\n                    setGlobalSnackbar(\"SHOW\", {\r\n                        message: \"Something Went Wrong!\",\r\n                        severity: \"error\",\r\n                    })\r\n                })\r\n        },\r\n    })\r\n\r\n    return { formik, registerState }\r\n}\r\n","import React from \"react\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Link from \"@material-ui/core/Link\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport LockOutlinedIcon from \"@material-ui/icons/Person\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport { Link as RouterLink } from \"react-router-dom\"\r\nimport useRegister from \"./register.handler\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(4),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    textName: {\r\n        display: \"flex\",\r\n    },\r\n    spacer: {\r\n        width: theme.spacing(4),\r\n    },\r\n}))\r\n\r\nexport interface RegisterProps {}\r\n\r\nconst Register: React.SFC<RegisterProps> = (props) => {\r\n    const classes = useStyles()\r\n    const { formik, registerState } = useRegister()\r\n    return (\r\n        <Container component='main' maxWidth='xs'>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component='h1' variant='h5'>\r\n                    Sign up\r\n                </Typography>\r\n                <form className={classes.form} noValidate autoComplete='none' onSubmit={formik.handleSubmit}>\r\n                    <div className={classes.textName}>\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            id='firstName'\r\n                            label='First Name'\r\n                            name='firstName'\r\n                            onChange={formik.handleChange}\r\n                            autoComplete='none'\r\n                            autoFocus\r\n                            FormHelperTextProps={{ style: { fontSize: 10 } }}\r\n                            helperText={formik.touched.firstName && formik.errors.firstName}\r\n                            error={!!formik.errors.firstName && formik.touched.firstName}\r\n                        />\r\n                        <div className={classes.spacer}></div>\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            id='lastName'\r\n                            label='Last Name'\r\n                            onChange={formik.handleChange}\r\n                            name='lastName'\r\n                            autoComplete='none'\r\n                            autoFocus\r\n                            FormHelperTextProps={{ style: { fontSize: 10 } }}\r\n                            helperText={formik.touched.lastName && formik.errors.lastName}\r\n                            error={!!formik.errors.lastName && formik.touched.lastName}\r\n                        />\r\n                    </div>\r\n                    <TextField\r\n                        variant='outlined'\r\n                        margin='normal'\r\n                        required\r\n                        fullWidth\r\n                        id='email'\r\n                        onChange={formik.handleChange}\r\n                        label='Email Address'\r\n                        name='email'\r\n                        autoComplete='none'\r\n                        FormHelperTextProps={{ style: { fontSize: 10 } }}\r\n                        autoFocus\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                        error={!!formik.errors.email && formik.touched.email}\r\n                    />\r\n                    <TextField\r\n                        variant='outlined'\r\n                        margin='normal'\r\n                        required\r\n                        fullWidth\r\n                        name='password'\r\n                        label='Password'\r\n                        onChange={formik.handleChange}\r\n                        type='password'\r\n                        id='password'\r\n                        FormHelperTextProps={{ style: { fontSize: 10 } }}\r\n                        autoComplete='none'\r\n                        helperText={formik.touched.password && formik.errors.password}\r\n                        error={!!formik.errors.password && formik.touched.password}\r\n                    />\r\n                    <TextField\r\n                        variant='outlined'\r\n                        margin='normal'\r\n                        required\r\n                        fullWidth\r\n                        name='confirmPassword'\r\n                        label='Confirm Password'\r\n                        type='password'\r\n                        onChange={formik.handleChange}\r\n                        id='confirmPassword'\r\n                        autoComplete='none'\r\n                        FormHelperTextProps={{ style: { fontSize: 10 } }}\r\n                        helperText={formik.touched.confirmPassword && formik.errors.confirmPassword}\r\n                        error={!!formik.errors.confirmPassword && formik.touched.confirmPassword}\r\n                    />\r\n                    <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit} disabled={registerState.loading}>\r\n                        {registerState.loading ? \"Loading..\" : \"Sign Up\"}\r\n                    </Button>\r\n                    <Box component='div' display='flex' justifyContent='flex-end'>\r\n                        <RouterLink to='/login'>\r\n                            <Link href='#' variant='body2'>\r\n                                {\"Sign In\"}\r\n                            </Link>\r\n                        </RouterLink>\r\n                    </Box>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"],"sourceRoot":""}